{"ast":null,"code":"import _classCallCheck from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/src/components/Graphs/BarChart.js\";\nimport React from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nvar BarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarChart, _React$Component);\n\n  function BarChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BarChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getOption = function () {\n      return {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // Use axis to trigger tooltip\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n\n          },\n          formatter: function formatter(params) {\n            return \"\\n                        Total de artigos em \".concat(params[0].name, \": <br />\\n                        \").concat(params[0].marker, \"  \").concat(params[0].seriesName, \": <strong>\").concat(params[0].value, \"</strong><br />\\n                        \").concat(params[1].marker, \"  \").concat(params[1].seriesName, \": <strong>\").concat(params[1].value, \"<strong>\\n                        \");\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          name: 'Ano',\n          type: 'category',\n          data: [\"2000\", \"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"]\n        },\n        yAxis: {\n          name: 'Quantidade',\n          type: 'value'\n        },\n        series: [{\n          name: 'Estigmatizante',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: false\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [320, 302, 301, 334, 390, 330, 320, 320, 302, 301, 334, 390, 330, 320]\n        }, {\n          name: 'Literal',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: false\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [120, 132, 101, 134, 90, 230, 210, 320, 302, 301, 334, 390, 330, 320]\n        }]\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: \"500px\",\n          width: \"910px\",\n          marginLeft: \"20px\",\n          marginTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return BarChart;\n}(React.Component);\n\nexport default BarChart;","map":{"version":3,"sources":["/home/alina/Desktop/UA/MEI/Tese/cÃ³digo/interface/src/components/Graphs/BarChart.js"],"names":["React","ReactEcharts","BarChart","getOption","tooltip","trigger","axisPointer","type","formatter","params","name","marker","seriesName","value","grid","left","right","bottom","containLabel","xAxis","data","yAxis","series","stack","label","show","emphasis","focus","height","width","marginLeft","marginTop","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactEcharts from 'echarts-for-react'\n\nclass BarChart extends React.Component {\n    \n    getOption = () => ({\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // Use axis to trigger tooltip\n              type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n            },\n            formatter: (params) => {\n              return `\n                        Total de artigos em ${params[0].name}: <br />\n                        ${params[0].marker}  ${params[0].seriesName}: <strong>${params[0].value}</strong><br />\n                        ${params[1].marker}  ${params[1].seriesName}: <strong>${params[1].value}<strong>\n                        `;\n            },\n          },\n         \n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: {\n            name: 'Ano',\n            type: 'category',\n            data: [\"2000\", \"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\" ]\n          },\n          yAxis: {\n            name: 'Quantidade',\n            type: 'value'\n          },\n          series: [\n            {\n              name: 'Estigmatizante',\n              type: 'bar',\n              stack: 'total',\n              label: {\n                show: false\n              },\n              emphasis: {\n                focus: 'series'\n              },\n              data: [320, 302, 301, 334, 390, 330, 320, 320, 302, 301, 334, 390, 330, 320]\n            },\n            {\n              name: 'Literal',\n              type: 'bar',\n              stack: 'total',\n              label: {\n                show: false,\n              },\n              emphasis: {\n                focus: 'series'\n              },\n              data: [120, 132, 101, 134, 90, 230, 210, 320, 302, 301, 334, 390, 330, 320]\n            },\n          ]\n      });\n\n      render(){\n        return (\n            <ReactEcharts\n                option={this.getOption()}\n                style={{ height: \"500px\", width: \"910px\", marginLeft:\"20px\", marginTop:\"30px\"}}\n            />\n        );\n      }\n        \n            \n \n    \n}\n\nexport default BarChart"]},"metadata":{},"sourceType":"module"}