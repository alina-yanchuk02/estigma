{"ast":null,"code":"import _toConsumableArray from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"/home/alina/Desktop/UA/MEI/Tese/c\\xF3digo/interface/src/components/Graphs/DoughnutChart.js\";\n\nimport React from 'react';\nimport { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\n\nvar DoughnutChart = function DoughnutChart(_ref) {\n  var height = _ref.height,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? [] : _ref$color;\n  var theme = useTheme();\n  var option = {\n    legend: {\n      show: true,\n      itemGap: 20,\n      icon: 'circle',\n      bottom: 0,\n      textStyle: {\n        color: \"blue\",\n        fontSize: 13,\n        fontFamily: 'roboto'\n      }\n    },\n    tooltip: {\n      show: false,\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    xAxis: [{\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    yAxis: [{\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    series: [{\n      name: 'Traffic Rate',\n      type: 'pie',\n      radius: ['45%', '72.55%'],\n      center: ['50%', '50%'],\n      avoidLabelOverlap: false,\n      hoverOffset: 5,\n      stillShowZeroSum: false,\n      label: {\n        normal: {\n          show: false,\n          position: 'center',\n          // shows the description data to center, turn off to show in right side\n          textStyle: {\n            color: \"black\",\n            fontSize: 13,\n            fontFamily: 'roboto'\n          },\n          formatter: '{a}'\n        },\n        emphasis: {\n          show: true,\n          textStyle: {\n            fontSize: '14',\n            fontWeight: 'normal' // color: \"rgba(15, 21, 77, 1)\"\n\n          },\n          formatter: '{b} \\n{c} ({d}%)'\n        }\n      },\n      labelLine: {\n        normal: {\n          show: false\n        }\n      },\n      data: [{\n        value: 65,\n        name: 'Google'\n      }, {\n        value: 20,\n        name: 'Facebook'\n      }, {\n        value: 15,\n        name: 'Others'\n      }],\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/React.createElement(ReactEcharts, {\n    style: {\n      height: height,\n      width: \"300px\"\n    },\n    option: _objectSpread({}, option, {\n      color: _toConsumableArray(color)\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/home/alina/Desktop/UA/MEI/Tese/cÃ³digo/interface/src/components/Graphs/DoughnutChart.js"],"names":["React","useTheme","ReactEcharts","DoughnutChart","height","color","theme","option","legend","show","itemGap","icon","bottom","textStyle","fontSize","fontFamily","tooltip","trigger","formatter","xAxis","axisLine","splitLine","yAxis","series","name","type","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","data","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/system'\nimport ReactEcharts from 'echarts-for-react'\n\nconst DoughnutChart = ({ height, color = [] }) => {\n    const theme = useTheme()\n\n    const option = {\n        legend: {\n            show: true,\n            itemGap: 20,\n            icon: 'circle',\n            bottom: 0,\n            textStyle: {\n                color: \"blue\",\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        tooltip: {\n            show: false,\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\n        },\n        xAxis: [\n            {\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n        ],\n        yAxis: [\n            {\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n        ],\n\n        series: [\n            {\n                name: 'Traffic Rate',\n                type: 'pie',\n                radius: ['45%', '72.55%'],\n                center: ['50%', '50%'],\n                avoidLabelOverlap: false,\n                hoverOffset: 5,\n                stillShowZeroSum: false,\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'center', // shows the description data to center, turn off to show in right side\n                        textStyle: {\n                            color: \"black\",\n                            fontSize: 13,\n                            fontFamily: 'roboto',\n                        },\n                        formatter: '{a}',\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: '14',\n                            fontWeight: 'normal',\n                            // color: \"rgba(15, 21, 77, 1)\"\n                        },\n                        formatter: '{b} \\n{c} ({d}%)',\n                    },\n                },\n                labelLine: {\n                    normal: {\n                        show: false,\n                    },\n                },\n                data: [\n                    {\n                        value: 65,\n                        name: 'Google',\n                    },\n                    {\n                        value: 20,\n                        name: 'Facebook',\n                    },\n                    { value: 15, name: 'Others' },\n                ],\n                itemStyle: {\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\n                    },\n                },\n            },\n        ],\n    }\n\n    return (\n        <ReactEcharts\n            style={{ height: height, width: \"300px\" }}\n            option={{\n                ...option,\n                color: [...color],\n            }}\n        />\n    )\n}\n\nexport default DoughnutChart"]},"metadata":{},"sourceType":"module"}