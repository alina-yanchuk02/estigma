{"ast":null,"code":"import React from 'react';\nimport * as echarts from 'echarts';\n\nvar DoughnutChart = function DoughnutChart() {\n  return setTimeout(function () {\n    var option = {\n      legend: {},\n      tooltip: {\n        trigger: 'axis',\n        showContent: false\n      },\n      dataset: {\n        source: [['product', '2012', '2013', '2014', '2015', '2016', '2017'], ['Milk Tea', 56.5, 82.1, 88.7, 70.1, 53.4, 85.1], ['Matcha Latte', 51.1, 51.4, 55.1, 53.3, 73.8, 68.7], ['Cheese Cocoa', 40.1, 62.2, 69.5, 36.4, 45.2, 32.5], ['Walnut Brownie', 25.2, 37.1, 41.2, 18, 33.9, 49.1]]\n      },\n      xAxis: {\n        type: 'category'\n      },\n      yAxis: {\n        gridIndex: 0\n      },\n      grid: {\n        top: '55%'\n      },\n      series: [{\n        type: 'line',\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: {\n          focus: 'series'\n        }\n      }, {\n        type: 'line',\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: {\n          focus: 'series'\n        }\n      }, {\n        type: 'line',\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: {\n          focus: 'series'\n        }\n      }, {\n        type: 'line',\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: {\n          focus: 'series'\n        }\n      }, {\n        type: 'pie',\n        id: 'pie',\n        radius: '30%',\n        center: ['50%', '25%'],\n        emphasis: {\n          focus: 'self'\n        },\n        label: {\n          formatter: '{b}: {@2012} ({d}%)'\n        },\n        encode: {\n          itemName: 'product',\n          value: '2012',\n          tooltip: '2012'\n        }\n      }]\n    };\n    myChart.on('updateAxisPointer', function (event) {\n      var xAxisInfo = event.axesInfo[0];\n\n      if (xAxisInfo) {\n        var dimension = xAxisInfo.value + 1;\n        myChart.setOption({\n          series: {\n            id: 'pie',\n            label: {\n              formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n            },\n            encode: {\n              value: dimension,\n              tooltip: dimension\n            }\n          }\n        });\n      }\n    });\n    myChart.setOption(option);\n  });\n};\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/home/alina/Desktop/UA/MEI/Tese/cÃ³digo/interface/src/components/Graphs/DoughnutChart.js"],"names":["React","echarts","DoughnutChart","setTimeout","option","legend","tooltip","trigger","showContent","dataset","source","xAxis","type","yAxis","gridIndex","grid","top","series","smooth","seriesLayoutBy","emphasis","focus","id","radius","center","label","formatter","encode","itemName","value","myChart","on","event","xAxisInfo","axesInfo","dimension","setOption"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as echarts from 'echarts';\n\nconst DoughnutChart = () => {\n    \n\n    return (\n        setTimeout(function () {\n            var option = {\n              legend: {},\n              tooltip: {\n                trigger: 'axis',\n                showContent: false\n              },\n              dataset: {\n                source: [\n                  ['product', '2012', '2013', '2014', '2015', '2016', '2017'],\n                  ['Milk Tea', 56.5, 82.1, 88.7, 70.1, 53.4, 85.1],\n                  ['Matcha Latte', 51.1, 51.4, 55.1, 53.3, 73.8, 68.7],\n                  ['Cheese Cocoa', 40.1, 62.2, 69.5, 36.4, 45.2, 32.5],\n                  ['Walnut Brownie', 25.2, 37.1, 41.2, 18, 33.9, 49.1]\n                ]\n              },\n              xAxis: { type: 'category' },\n              yAxis: { gridIndex: 0 },\n              grid: { top: '55%' },\n              series: [\n                {\n                  type: 'line',\n                  smooth: true,\n                  seriesLayoutBy: 'row',\n                  emphasis: { focus: 'series' }\n                },\n                {\n                  type: 'line',\n                  smooth: true,\n                  seriesLayoutBy: 'row',\n                  emphasis: { focus: 'series' }\n                },\n                {\n                  type: 'line',\n                  smooth: true,\n                  seriesLayoutBy: 'row',\n                  emphasis: { focus: 'series' }\n                },\n                {\n                  type: 'line',\n                  smooth: true,\n                  seriesLayoutBy: 'row',\n                  emphasis: { focus: 'series' }\n                },\n                {\n                  type: 'pie',\n                  id: 'pie',\n                  radius: '30%',\n                  center: ['50%', '25%'],\n                  emphasis: {\n                    focus: 'self'\n                  },\n                  label: {\n                    formatter: '{b}: {@2012} ({d}%)'\n                  },\n                  encode: {\n                    itemName: 'product',\n                    value: '2012',\n                    tooltip: '2012'\n                  }\n                }\n              ]\n            };\n            myChart.on('updateAxisPointer', function (event) {\n              const xAxisInfo = event.axesInfo[0];\n              if (xAxisInfo) {\n                const dimension = xAxisInfo.value + 1;\n                myChart.setOption({\n                  series: {\n                    id: 'pie',\n                    label: {\n                      formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n                    },\n                    encode: {\n                      value: dimension,\n                      tooltip: dimension\n                    }\n                  }\n                });\n              }\n            });\n            myChart.setOption(option);\n          })\n    )\n}\n\nexport default DoughnutChart"]},"metadata":{},"sourceType":"module"}